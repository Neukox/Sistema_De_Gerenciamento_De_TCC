// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TipoUsuario {
  ADMIN
  ALUNO
  PROFESSOR
}

enum PapelBanca {
  ORIENTADOR
  COORIENTADOR
}

enum StatusTCC {
  PLANEJAMENTO
  DESENVOLVIMENTO
  REVISAO
  FINALIZACAO
  CONCLUIDO
}

enum StatusAtividade {
  PENDENTE
  CONCLUIDA
}

model Usuario {
  id            Int         @id @default(autoincrement())
  nome_completo String
  email         String      @unique
  senha         String
  tipo          TipoUsuario
  criado_em     DateTime    @default(now())
  atualizado_em DateTime    @updatedAt

  Aluno       Aluno?
  Professor   Professor?
  Comentarios Comentario[]
}

model Aluno {
  Usuario_id Int    @id
  curso      String

  Usuario Usuario @relation(fields: [Usuario_id], references: [id])
  TCCs    TCC[]
}

model Professor {
  Usuario_id      Int     @id
  area_atuacao    String
  disponibilidade Boolean

  Usuario Usuario @relation(fields: [Usuario_id], references: [id])
  Bancas  Banca[]
}

model TCC {
  id                    Int       @id @default(autoincrement())
  titulo                String
  tema                  String
  resumo                String
  data_inicio           DateTime?
  data_prevista_entrega DateTime?
  criado_em             DateTime  @default(now())
  ultima_atualizacao    DateTime  @updatedAt
  status_atual          StatusTCC
  finalizado_em         DateTime?

  Aluno_id Int

  Aluno       Aluno        @relation(fields: [Aluno_id], references: [Usuario_id])
  Bancas      Banca[]
  Atividades  Atividade[]
  Comentarios Comentario[]
}

model Banca {
  TCC_id       Int
  Professor_id Int
  papel        PapelBanca

  TCC       TCC       @relation(fields: [TCC_id], references: [id])
  Professor Professor @relation(fields: [Professor_id], references: [Usuario_id])

  @@id([TCC_id, Professor_id])
}

model Atividade {
  id           Int             @id @default(autoincrement())
  nome         String
  descricao    String
  status       StatusAtividade
  data_entrega DateTime
  arquivo_url  String?
  concluido_em DateTime?

  tccId         Int
  tcc           TCC      @relation(fields: [tccId], references: [id])
}
